<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.dao.CollectionMapper" >
  <resultMap id="BaseResultMap" type="com.ssm.model.Collection" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="collectorID" property="collectorid" jdbcType="INTEGER" />
    <result column="bookID" property="bookid" jdbcType="INTEGER" />
    <result column="bookName" property="bookname" jdbcType="VARCHAR" />
    <result column="bookPrice" property="bookprice" jdbcType="REAL" />
    <result column="bookCover" property="bookcover" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, collectorID, bookID, bookName, bookPrice, bookCover
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from collection
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from collection
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ssm.model.Collection" >
    insert into collection (id, collectorID, bookID, 
      bookName, bookPrice, bookCover
      )
    values (#{id,jdbcType=INTEGER}, #{collectorid,jdbcType=INTEGER}, #{bookid,jdbcType=INTEGER}, 
      #{bookname,jdbcType=VARCHAR}, #{bookprice,jdbcType=REAL}, #{bookcover,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.model.Collection" >
    insert into collection
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="collectorid != null" >
        collectorID,
      </if>
      <if test="bookid != null" >
        bookID,
      </if>
      <if test="bookname != null" >
        bookName,
      </if>
      <if test="bookprice != null" >
        bookPrice,
      </if>
      <if test="bookcover != null" >
        bookCover,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="collectorid != null" >
        #{collectorid,jdbcType=INTEGER},
      </if>
      <if test="bookid != null" >
        #{bookid,jdbcType=INTEGER},
      </if>
      <if test="bookname != null" >
        #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="bookprice != null" >
        #{bookprice,jdbcType=REAL},
      </if>
      <if test="bookcover != null" >
        #{bookcover,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.model.Collection" >
    update collection
    <set >
      <if test="collectorid != null" >
        collectorID = #{collectorid,jdbcType=INTEGER},
      </if>
      <if test="bookid != null" >
        bookID = #{bookid,jdbcType=INTEGER},
      </if>
      <if test="bookname != null" >
        bookName = #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="bookprice != null" >
        bookPrice = #{bookprice,jdbcType=REAL},
      </if>
      <if test="bookcover != null" >
        bookCover = #{bookcover,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.model.Collection" >
    update collection
    set collectorID = #{collectorid,jdbcType=INTEGER},
      bookID = #{bookid,jdbcType=INTEGER},
      bookName = #{bookname,jdbcType=VARCHAR},
      bookPrice = #{bookprice,jdbcType=REAL},
      bookCover = #{bookcover,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>